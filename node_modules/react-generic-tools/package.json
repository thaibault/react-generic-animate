{
  "name": "react-generic-tools",
  "version": "0.0.3",
  "description": "Generic utility types, methods and components.",
  "keywords": [
    "utility",
    "generic",
    "react"
  ],
  "homepage": "https://torben.website/react-generic-tools",
  "bugs": {
    "email": "info@torben.website",
    "url": "https://github.com/thaibault/react-generic-tools/issues"
  },
  "license": "CC-BY-3.0",
  "main": "index.js",
  "author": {
    "name": "Torben Sickert",
    "email": "info@torben.website",
    "url": "https://torben.website"
  },
  "files": [
    "index.d.ts",
    "testHelper.d.ts",
    "testHelper.js",
    "type.d.ts"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/react-generic-tools"
  },
  "scripts": {
    "build": "yarn build:types; yarn build:plain",
    "build:plain": "weboptimizer build",
    "build:types": "weboptimizer build:types",
    "check": "yarn check:types; yarn lint",
    "check:types": "weboptimizer check:types",
    "clear": "weboptimizer clear",
    "document": "weboptimizer document",
    "lint": "yarn clear && weboptimizer lint",
    "prepare": "yarn build",
    "postversion": "yarn publish --non-interactive; git push --tags && git push",
    "serve": "weboptimizer serve",
    "start": "yarn serve",
    "test": "yarn clear && weboptimizer test '{__reference__: \"target:minimal\"}'",
    "test:browser": "yarn clear && weboptimizer test:browser '{__reference__: \"target:minimal\"}'",
    "test:coverage": "yarn clear && weboptimizer test:coverage",
    "test:coverage:report": "yarn clear && weboptimizer test:coverage:report '{__reference__: \"target:minimal\"}'",
    "update": "yarn version --patch",
    "update:documentation": "documentation-website",
    "watch": "weboptimizer build --watch"
  },
  "runkitExample": "require('@babel/runtime/package.json')\n\nglobalThis.window = globalThis\n\nconst {useMemorizedValue} = require('react-generic-tools')\n\nconst value = useMemorizedValue({date: 'content'})",
  "devDependencies": {
    "@babel/eslint-parser": "*",
    "@babel/preset-react": "*",
    "@types/jsdom": "*",
    "@types/node": "*",
    "@types/react": "*",
    "@types/react-dom": "*",
    "@types/webpack-env": "*",
    "@typescript-eslint/eslint-plugin": "*",
    "@typescript-eslint/parser": "*",
    "clientnode": "*",
    "documentation-website": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-jsdoc": "*",
    "jest": "*",
    "jsdoc": "*",
    "react": ">=17",
    "react-dom": "*",
    "tslib": "*",
    "weboptimizer": "*",
    "webpack-dev-server": "*"
  },
  "peerDependencies": {
    "@babel/runtime": "*",
    "@types/react": "*",
    "@types/react-dom": "*",
    "clientnode": "*",
    "react": "*",
    "react-dom": "*",
    "tslib": "*"
  },
  "peerDependenciesMeta": {
    "@babel/runtime": {
      "optional": true
    },
    "@types/react": {
      "optional": true
    },
    "@types/react-dom": {
      "optional": true
    },
    "clientnode": {
      "optional": true
    },
    "react": {
      "optional": true
    },
    "react-dom": {
      "optional": true
    }
  },
  "engines": {
    "node": ">=18",
    "npm": ">=9"
  },
  "sideEffects": false,
  "documentationWebsite": {
    "tagline": "Generic react utilities.",
    "trackingCode": "TODO"
  },
  "webOptimizer": {
    "commandLine": {
      "test": {
        "environments": [
          "jsdom"
        ]
      }
    },
    "generic": {
      "entry": {
        "testHelper": "./testHelper",
        "index": "./index.ts",
        "type": "./type"
      },
      "supportedBrowsers": [
        "IE >= 11",
        "last 2 versions",
        "> 5%"
      ]
    },
    "module": {
      "preprocessor": {
        "javaScript": {
          "options": {
            "presets": {
              "#": "TODO: Remove \"@babel/react\" options when updated to babel 8. NOTE: We have to disable module export/import transformation to allow tree shaking by the final (minimizer).",
              "__evaluate__": "[['@babel/react', {runtime: 'automatic'}], ['@babel/preset-env', {loose: true, modules: false, targets: self.targetTechnology === 'node' ? {node: 'current'} : {browsers: self.generic.supportedBrowsers, node: 'current'}}], '@babel/typescript'].concat((self.debug || !self.module.optimizer.babelMinify.module || 2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'document') ? [] : [['minify', self.module.optimizer.babelMinify.module]])"
            }
          }
        }
      }
    }
  }
}
